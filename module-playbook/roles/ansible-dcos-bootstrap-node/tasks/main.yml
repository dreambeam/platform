---
# tasks file for ansible-dcos-bootstrap-node

- name: Create genconf and ssh-key directories
  file: path={{ item }} state=directory mode=755
  with_items:
    - '{{ dcos_bootstrap_dir }}'
    - '{{ dcos_bootstrap_dir }}/genconf'
    - '{{ dcos_bootstrap_dir }}/genconf/ssh-key'

- name: Copy configuration file
  template: src=genconf/config.yaml.j2 dest={{ dcos_bootstrap_dir }}/genconf/config.yaml mode=755

- name: Generate ssh-key
  command: ssh-keygen -N '' -f {{ dcos_bootstrap_dir }}/genconf/ssh-key/id_rsa

- name: Unencrypt ssh-key
  command: openssl rsa -in {{ dcos_bootstrap_dir }}/genconf/ssh-key/id_rsa -out {{ dcos_bootstrap_dir }}/genconf/ssh-key/id_rsa

- name: Copy ip-detect file
  template: src=genconf/ip-detect.j2 dest={{ dcos_bootstrap_dir }}/genconf/ip-detect mode=755

- name: Download the DC/OS installer
  get_url: url={{ dcos_bootstrap_generate_config_url }} dest={{ dcos_bootstrap_dir }}/{{ dcos_bootstrap_generate_config }} mode=755 timeout=1000

- name: Add user to docker group
  user: name={{ ansible_user_id }} groups=docker append=yes
  become: true
#  register: add_group

#- name: Reset ssh session to pick up new group permissions
#  local_action: "command ssh -O exit {{ ansible_ssh_host }}"
#  when: add_group|changed
#  shell: sleep 1; pkill -u {{ ansible_ssh_host }} sshd
#  async: 3
#  poll: 2
#  command: "pkill -u {{ ansible_user_id }} sshd"
#  sudo: no
#  when: add_group|changed

- name: Generate customized DC/OS build file
  command: '{{ dcos_bootstrap_dir }}/{{ dcos_bootstrap_generate_config }}'
  args:
    chdir: '{{ dcos_bootstrap_dir }}'
#  async: 1000

- name: Install docker-python
  yum: name=docker-python state=present
  become: true

- name: Host DC/OS install package through nginx Docker container
  docker:
    name: dcos-bootstrap
    image: nginx
    state: started
    ports:
      - '{{dcos_bootstrap_port}}:80'
    volumes:
      - '{{dcos_bootstrap_dir}}/genconf/serve:/usr/share/nginx/html:ro'
